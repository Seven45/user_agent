package user_agent

import (
	"math/rand"
	"strings"
)

func getFirefoxVersions() []string {
	return []string{
		"81.0", "81.0.1", "81.0.2",
		"80.0", "80.0.1",
		"79.0",
		"78.0", "78.0.1", "78.0.2",
		"77.0", "77.0.1",
		"76.0", "76.0.1",
		"75.0",
		"74.0", "74.0.1",
		"73.0", "73.0.1",
		"72.0", "72.0.1", "72.0.2",
		"71.0",
		"70.0", "70.0.1",
		"69.0", "69.0.1", "69.0.2", "69.0.3",
		"68.0", "68.0.1", "68.1.0", "68.2.0", "68.3.0", "68.4.0", "68.4.1", "68.4.2", "68.5.0", "68.6.0", "68.6.1", "68.7.0", "68.8.0", "68.9.0", "68.10.0", "68.11.0", "68.12.0",
		"67.0", "67.0.1", "67.0.2", "67.0.3", "67.0.4",
		"66.0", "66.0.1", "66.0.2", "66.0.3", "66.0.4", "66.0.5",
		"65.0", "65.0.1",
		"64.0", "64.0.2",
		"63.0", "63.0.1", "63.0.3",
		"62.0", "62.0.2", "62.0.3",
		"61.0", "61.0.1", "61.0.2",
		"60.0", "60.0.1", "60.0.2", "60.1.0", "60.2.0", "60.2.1", "60.2.2", "60.3.0", "60.4.0", "60.5.0", "60.5.1", "60.5.2",
		"59.0", "59.0.1", "59.0.2", "59.0.3",
		"58.0", "58.0.1", "58.0.2",
		"57.0", "57.0.1", "57.0.2", "57.0.3", "57.0.4",
		"56.0", "56.0.1", "56.0.2",
		"55.0", "55.0.1", "55.0.2", "55.0.3",
		"54.0", "54.0.1",
		"53.0", "53.0.2", "53.0.3",
		"52.0", "52.0.1", "52.0.2", "52.1.0", "52.1.1", "52.1.2", "52.2.0", "52.2.1", "52.3.0", "52.4.0", "52.4.1", "52.5.0", "52.5.2", "52.5.3", "52.6.0", "52.7.0", "52.7.1", "52.7.2", "52.7.3",
		"52.7.4", "52.8.0", "52.8.1", "52.9.0",
		"51.0", "51.0.1",
		"50.0", "50.0.1", "50.0.2",
	}
}

func getChromeVersions() []string {
	return []string{
		"86.0.4240",
		"85.0.4183",
		"84.0.4147",
		"83.0.4103",
		"81.0.4044",
		"80.0.3987",
		"79.0.3945",
		"78.0.3904",
		"77.0", "77.0.3865",
		"76.0.3809",
		"75.0.3770",
		"74.0.3729",
		"73.0.3683",
		"72.0.3626",
		"71.0.3578.80", "71.0.3578.98",
		"70.0.3538.102", "70.0.3538.80", "70.0.3538.67", "70.0.3538.77", "70.0.3538.110",
		"69.0.3497.100", "69.0.3497.81", "69.0.3497.92",
		"68.0.3440.91", "68.0.3440.106", "68.0.3440.84", "68.0.3440.1805", "68.0.3440.75",
		"67.0.3396.87", "67.0.3396.99", "67.0.3396.79", "67.0.3396.62",
		"66.0.3359.117", "66.0.3359.139", "66.0.3359.181", "66.0.3359.158", "66.0.3359.170",
		"65.0.3325.181", "65.0.3325.109", "65.0.3325.162",
		"64.0.3282.186", "64.0.3282.140", "64.0.3282.137", "64.0.3282.167", "64.0.3282.119",
		"63.0.3239.83", "63.0.3239.111", "63.0.3239.108", "63.0.3239.84", "63.0.3239.132",
		"62.0.3202.94", "62.0.3202.89", "62.0.3202.84", "62.0.3202.62",
		"61.0.3163.100", "61.0.3163.79", "61.0.3163.98",
		"60.0.3112.78", "60.0.3112.90", "60.0.3112.113", "60.0.3112.116",
	}
}

func getOperaVersions() []string {
	return []string{
		"71.0.3770.148", "71.0.3770.171", "71.0.3770.198", "71.0.3770.228", "71.0.3770.271",
		"70.0.3728.106", "70.0.3728.119", "70.0.3728.133", "70.0.3728.144", "70.0.3728.154", "70.0.3728.178", "70.0.3728.189", "70.0.3728.71", "70.0.3728.95",
		"69.0.3686.36", "69.0.3686.49", "69.0.3686.57", "69.0.3686.77", "69.0.3686.95",
		"68.0.3618.104", "68.0.3618.125", "68.0.3618.165", "68.0.3618.173", "68.0.3618.46", "68.0.3618.56", "68.0.3618.63", "68.0.3618.91",
		"67.0.3575.115", "67.0.3575.137", "67.0.3575.31", "67.0.3575.53", "67.0.3575.79", "67.0.3575.97",
		"66.0.3515.103", "66.0.3515.115", "66.0.3515.27", "66.0.3515.36", "66.0.3515.44", "66.0.3515.60", "66.0.3515.72", "66.0.3515.95",
		"65.0.3467.38", "65.0.3467.42", "65.0.3467.48", "65.0.3467.62", "65.0.3467.69", "65.0.3467.72", "65.0.3467.78",
		"64.0.3417.119", "64.0.3417.126", "64.0.3417.47", "64.0.3417.54", "64.0.3417.61", "64.0.3417.70", "64.0.3417.73", "64.0.3417.83", "64.0.3417.92",
	}
}

func getFirefox() string {
	userAgent := "Mozilla/5.0 (%PLAT%; rv:%VER%) Gecko/20100101 Firefox/%VER%"
	versions := getFirefoxVersions()
	version := versions[rand.Intn(len(versions))]
	return strings.ReplaceAll(userAgent, "%VER%", version)
}

func getChrome() string {
	userAgent := "Mozilla/5.0 (%PLAT%) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%VER% Safari/537.36"
	versions := getChromeVersions()
	version := versions[rand.Intn(len(versions))]
	return strings.ReplaceAll(userAgent, "%VER%", version)
}

func getOpera() string {
	userAgent := "Mozilla/5.0 (%PLAT%) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%CVER% Safari/537.36 OPR/%OVER%"
	operaVersions := getOperaVersions()
	chromeVersions := getChromeVersions()
	index := rand.Intn(len(operaVersions))
	userAgent = strings.ReplaceAll(userAgent, "%OVER%", operaVersions[index])
	return strings.ReplaceAll(userAgent, "%CVER%", chromeVersions[index])
}

func getRandomBrowser() string {
	functions := []func() string{getFirefox, getChrome, getOpera}
	return functions[rand.Intn(len(functions))]()
}
